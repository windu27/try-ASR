# -*- coding: utf-8 -*-
"""Try ASR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15MUNLodufgcdFnoaR3oX5KgvNmT9UcwL
"""

!pip install pytube moviepy SpeechRecognition streamlit

import os
import pytube
from moviepy.editor import VideoFileClip
import speech_recognition as sr
import streamlit as st

# function for transcribe video
def transcribe_video(video_path):
  try:
    # extract audio from video
    audio_clip = VideoFileClip(video_path).audio
    audio_clip.write_audiofile("audio_temp.wav", codec = "pcm_s16le", fps = 16000)

    # using speech recognition
    r = sr.Recognizer()
    with sr.AudioFile("audio_temp.wav") as source:
      audio_data = r.record(source)
      transcript = r.recognize_google(audio_data)

    # Display transcribed text
    st.subheader("Transcript: ")
    st.text(transcript)

  except Exception as e:
    st.error(f"Error: {str(e)}")

  finally:
    if os.path.exists("audio_temp.wav"):
      os.remove("audio_temp.wav")

# Memasukan judul pada streamlit
st.title("Video Transcription")

# Membuat input radio untuk memilih inputan video
option = st.radio("Select input: ", ("Youtube video", "Local Directory"))

if option == "Youtube video":
  # memasukan link youtube
  utub_url  = st.text_input("Enter Youtube link URL: ")
  if st.button("Transcribe"):
    # memanggil fungsi transcribe utube
    if utub_url:
      transcribe_utube(utub_url)

# jika mengunggah video dari direktori lokal
else:
  file_vid = st.file_uploader("Choose ur video: ", type=["mp4", "avi", "mov"])
  if st.button("Transcribe"):
    if file_vid:
      # temporary save file
      video_path = f"temp_{file_vid.name}"
      with open(video_path, "wb") as temp_file:
        temp_file.write(file_vid.read())

      transcribe_video(video_path)

      # clean temp file
      os.remove(video_path)

# Fungsi untuk mengambil link youtube
def transcribe_utube(utube_url):
  try:
    # Mengunduh Link outube
    utube = pytube.YouTube(utube_url)
    video_stream = utube.streams.filters(only_audio = True).first()
    video_stream.download("utube_temp_vid.mp4")

    # memanggil fungsi transcibe_video untuk di transcribe
    transcribe_video("utube_temp_vid.mp4")

  except Exception as e:
    st.error(f"Error : {str(e)}")

  finally:
    # menghapus video yang sudah di unduh
    if os.path.exists("utube_temp_vid.mp4"):
      os.removed("utube_temp_vid.mp4")



